@inject IMemberService MemberService
@inject IToastService ToastService

<div class="col-12 col-sm-6 col-lg-4 col-xl-3">
    <img class="img-thumbnail rounded p-1" src="@photoFilename">
    <div class="text-center">
        @if (Photo.IsMain == false)
        {
            <button class="btn btn-dark mx-1" @onclick="HandleSetMainPhoto">Set Main</button>
        }
        <button class="btn btn-danger" @onclick="HandleDeletePhoto"><i class="fa fa-trash" /></button>
    </div>
</div>

@code {
    [Parameter]
    public string Username { get; set; }
    
    [Parameter]
    public PhotoModel Photo { get; set; }

    [Parameter]
    public EventCallback<string> OnImageChanged { get; set; }

    private string photoFilename { get; set; } = "./assets/user.png";

    protected override async Task OnParametersSetAsync()
    {
        photoFilename = await MemberService.GetPhotoAsync(Username, Photo.Filename);
    }

    private async Task HandleSetMainPhoto()
    {
        if (Photo.IsMain)
        {
            return;
        }

        ServiceResponseModel<string> result = await MemberService.SetMainPhotoAsync(Username, Photo.Id);

        if (result.Success)
        {
            ToastService.ShowSuccess("Main photo updated successfully");
            await OnImageChanged.InvokeAsync();
        }
        else
        {
            ToastService.ShowError($"{result.Message}");
        }
    }

    private async Task HandleDeletePhoto()
    {
        ServiceResponseModel<string> result = await MemberService.DeletePhotoAsync(Username, Photo);

        if (result.Success)
        {
            ToastService.ShowSuccess("Photo deleted successfully");
            await OnImageChanged.InvokeAsync();
        }
        else
        {
            ToastService.ShowError($"{result.Message}");
        }
    }
}
