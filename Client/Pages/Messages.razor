@page "/messages"
@attribute [Authorize]

<PageTitle>DatingApp - Messages</PageTitle>

<section>
    <MudText Typo="Typo.h2" Align="Align.Center" Class="mb-5">@_pageTitle</MudText>

    <MudButtonGroup Class="d-flex justify-center mb-5" Color="Color.Primary" Variant="Variant.Filled" Size="Size.Large" DisableElevation="true">
        <MudButton StartIcon="@Icons.Material.Filled.Mail" OnClick="@(() => HandlePredicateChange("unread"))">Unread</MudButton>
        <MudButton StartIcon="@Icons.Material.Filled.Inbox" OnClick="@(() => HandlePredicateChange("inbox"))">Inbox</MudButton>
        <MudButton StartIcon="@Icons.Material.Filled.Outbound" OnClick="@(() => HandlePredicateChange("sent"))">Sent</MudButton>
    </MudButtonGroup>

    @if (_showError)
    {
        <MudAlert Severity="Severity.Error">@_errorText</MudAlert>
    }
    else if (_messages?.Count > 0)
    {
        <MudGrid Class="mb-2" Justify="Justify.Center">
            <MudItem xs="12" xl="8">
                <MudTable T="MessageModel"
                      @ref="_messageTable"
                      Items="@_messages"
                      OnRowClick="HandleRowClickEvent"
                      Dense="true"
                      Hover="true"
                      Bordered="true"
                      Striped="true"
                      Loading="@_loadingMessages"
                      LoadingProgressColor="Color.Info"
                      Breakpoint="Breakpoint.None"
                      HorizontalScrollbar="true"
                      Elevation="20">
                    <HeaderContent>
                        @if (_messageFilter.Container == "Inbox" || _messageFilter.Container == "Unread")
                        {
                            <MudTh><MudText Typo="Typo.h5">From</MudText></MudTh>
                            <MudTh><MudText Typo="Typo.h5">Received</MudText></MudTh>
                        }
                        else
                        {
                            <MudTh><MudText Typo="Typo.h5">To</MudText></MudTh>
                            <MudTh><MudText Typo="Typo.h5">Sent</MudText></MudTh>
                        }
                        <MudTh><MudText Typo="Typo.h5">Message</MudText></MudTh>
                        <MudTh><MudText Typo="Typo.h5">Action</MudText></MudTh>
                    </HeaderContent>
                    <RowTemplate>
                        @if (_messageFilter.Container == "Inbox" || _messageFilter.Container == "Unread")
                        {
                            <MudTd Class="d-flex align-center">
                                <MudAvatar>
                                    <MudImage Src="@context.SenderPhotoUrl" />
                                </MudAvatar>
                                <MudText Class="ml-2" Typo="Typo.h6" Inline="true">@context.SenderUsername</MudText>
                            </MudTd>
                        }
                        else
                        {
                            <MudTd Class="d-flex align-center">
                                <MudAvatar>
                                    <MudImage Src="@context.RecipientPhotoUrl" />
                                </MudAvatar>
                                <MudText Class="ml-2" Typo="Typo.h6" Inline="true">@context.RecipientUsername</MudText>
                            </MudTd>
                        }
                        <MudTd><MudText Typo="Typo.h6">@DateTime.Now.Subtract(context.MessageSent.ToLocalTime()).Humanize() ago</MudText></MudTd>
                        <MudTd><MudText Typo="Typo.body1">@context.Content</MudText></MudTd>
                        <MudTd><MudButton Variant="Variant.Filled" Color="Color.Error" OnClick="() => HandleMessageDeleteAsync(context.Id)">Delete</MudButton></MudTd>
                    </RowTemplate>
                </MudTable>
            </MudItem>
        </MudGrid>

        <MudPagination Class="d-flex justify-center my-5"
                   Rectangular="true"
                   Color="Color.Primary"
                   Count="@_metaData.TotalPages"
                   Size="Size.Large"
                   Selected="@_metaData.CurrentPage"
                   SelectedChanged="HandlePageChangedAsync" />
    }
</section>
