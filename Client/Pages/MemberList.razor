@page "/members"
@attribute [Authorize]
@inject IAppUserService AppUserService
@inject IMemberService MemberService
@inject IToastService ToastService

<div class="container">

    <h3 class="text-center">Members</h3>

    @if (showError)
    {
        <div class="alert alert-danger text-center" role="alert">
            @errorText
        </div>
    }
    else if (members?.Count > 0)
    {
        <div class="row">
            @foreach (MemberModel m in members)
            {
                <div class="col-12 col-sm-6 col-md-4 col-xl-2">
                    <MemberCard Member="m" />
                </div>
            }
        </div>
        
        @if (metaData != null)
        {
            <div class="d-flex justify-content-center">
                <Pagination MetaData=@metaData Spread="10" PageChanged="HandlePageChanged" />
            </div>
        }
    }

</div>

@code {
    private List<MemberModel> members = new();
    private UserParameters userParameters = new();
    private PageModel metaData;
    private bool showError = false;
    private string errorText;

    protected override async Task OnInitializedAsync()
    {
        userParameters.PageNumber = 1;
        userParameters.PageSize = 5;
        await LoadMembers();
    }

    private async Task LoadMembers()
    {
        PagingResponseModel<IEnumerable<MemberModel>> result = await MemberService.GetMembersAsync(userParameters);

        if (result.Success)
        {
            members = result.Data.ToList();
            metaData = result.MetaData;
        }
        else
        {
            showError = true;
            errorText = $"Request failed: {result.Message}";
            ToastService.ShowError($"Request failed: {result.Message}");
        }
    }

    private async Task HandlePageChanged(int page)
    {
        userParameters.PageNumber = page;
        await LoadMembers();
    }
}
