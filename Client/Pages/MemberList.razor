@page "/members"
@attribute [Authorize]
@inject IAppUserService AppUserService
@inject IMemberService MemberService
@inject IToastService ToastService

<div class="container">

    <h3 class="text-center">Members</h3>

    @if (showError)
    {
        <div class="alert alert-danger text-center" role="alert">
            @errorText
        </div>
    }
    else if (members?.Count > 0)
    {
        <div class="text-center">
            <h2>Your matches - @metaData?.TotalCount found</h2>
        </div>

        <div id="formContainer" class="container mt-3">
            <EditForm class="form-inline mb-3" Model="@userParameters" OnValidSubmit="HandleFilterSubmit">
                    
                <div id="filterForm" class="form-row">
                    <div class="form-group">
                        <label>Age from: </label>
                        <InputNumber id="ageInput" class="form-control ml-1" @bind-Value="@userParameters.MinAge" />
                    </div>

                    <div class="form-group px-2">
                        <label>Age to: </label>
                        <InputNumber id="ageInput" class="form-control ml-1" @bind-Value="@userParameters.MaxAge" />
                    </div>

                    <div class="form-group px-2">
                        <label>Show: </label>
                        <InputSelect class="form-control ml-1" @bind-Value="@userParameters.Gender">
                            <option value="female">Female</option>
                            <option value="male">Male</option>
                        </InputSelect>
                    </div>

                    <div id="buttonGroup" class="form-group px-2">
                        <button class="btn btn-primary ml-1" type="submit">Apply Filters</button>
                        <button class="btn btn-info ml-1" type="button" @onclick="HandleFilterReset">Reset Filters</button>
                    </div>
                    
                </div>

            </EditForm>
        </div>
        
        <div class="row">
            @foreach (MemberModel m in members)
            {
                <div class="col-12 col-sm-6 col-md-4 col-xl-2">
                    <MemberCard Member="m" />
                </div>
            }
        </div>
        
        <div class="d-flex justify-content-center">
                <Pagination MetaData=@metaData Spread="10" PageChanged="HandlePageChanged" />
        </div>
    }

</div>

@code {
    private List<MemberModel> members = new();
    private UserParameters userParameters = new();
    private PaginationModel metaData;
    private bool showError = false;
    private string errorText;

    protected override async Task OnInitializedAsync()
    {
        HandleFilterReset();
        await LoadMembers();
    }

    private async Task LoadMembers()
    {
        PaginationResponseModel<IEnumerable<MemberModel>> result = await MemberService.GetMembersAsync(userParameters);

        if (result.Success)
        {
            members = result.Data.ToList();
            metaData = result.MetaData;
        }
        else
        {
            showError = true;
            errorText = $"Request failed: {result.Message}";
            ToastService.ShowError($"Request failed: {result.Message}");
        }
    }

    private async Task HandleFilterSubmit()
    {
        await LoadMembers();
    }

    private void HandleFilterReset()
    {
        userParameters.PageNumber = 1;
        userParameters.PageSize = 5;
        userParameters.MinAge = 18;
        userParameters.MaxAge = 99;

        if (AppUserService.AppUser.Gender.ToLower().Equals("female"))
        {
            userParameters.Gender = "male";
        }
        else
        {
            userParameters.Gender = "female";
        }
    }

    private async Task HandlePageChanged(int page)
    {
        userParameters.PageNumber = page;
        members = null;
        await LoadMembers();
    }
}
